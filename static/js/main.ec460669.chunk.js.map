{"version":3,"sources":["components/Cards/Cards.module.css","components/Cards/Cards.jsx","api/index.js","components/Chart/Chart.jsx","components/CountryPicker/CountryPicker.jsx","App.js","index.js","App.module.css","components/Chart/Chart.module.css","components/CountryPicker/CountryPicker.module.css","images/image.png"],"names":["module","exports","Cards","data","confirmed","recovered","deaths","lastUpdate","className","styles","container","Grid","spacing","justify","item","component","Card","xs","md","cx","card","infected","CardContent","Typography","color","gutterBottom","variant","start","end","value","duration","separator","Date","toDateString","url","fetchData","country","a","changeableUrl","axios","get","console","log","fetchDailyData","map","date","reportDate","total","fetchCountries","countries","name","Chart","useState","dailyData","setDailyData","useEffect","fetchAPI","lineChart","length","labels","datasets","label","borderColor","fill","backgroundColor","barChart","options","legend","display","title","text","CountryPicker","handleCountryChange","setCountries","FormControl","formControl","NativeSelect","defaultValue","onChange","e","target","i","key","App","state","fetchedData","setState","this","image","src","coronaImage","alt","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ec460669.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__OePsE\",\"card\":\"Cards_card__1Xd-r\",\"infected\":\"Cards_infected__moZk1\",\"recovered\":\"Cards_recovered__2MlKQ\",\"deaths\":\"Cards_deaths__1ANNL\"};","import React from 'react';\r\nimport {Card, CardContent, Typography, Grid} from '@material-ui/core';\r\nimport CountUp from 'react-countup';\r\nimport styles from './Cards.module.css';\r\nimport cx from 'classnames';\r\n\r\nconst Cards = ({ data: { confirmed, recovered, deaths, lastUpdate } }) => {\r\n    if(!confirmed) {\r\n        return 'Loading...';\r\n    }\r\n\r\n    return (\r\n        <div className={styles.container}>\r\n            <Grid container spacing={3} justify=\"center\">\r\n                <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.infected)}>\r\n                    <CardContent>\r\n                        <Typography color=\"textSecondary\" gutterBottom>Infected</Typography>\r\n                        <Typography variant=\"h5\">\r\n                            <CountUp start={0} end={confirmed.value} duration={2} separator=\",\" />\r\n                        </Typography>\r\n                        <Typography color =\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\r\n                        <Typography variant=\"body2\">Number of Active cases of COVID-19</Typography>\r\n                    </CardContent>\r\n                </Grid>\r\n                <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.recovered)}>\r\n                    <CardContent>\r\n                        <Typography color=\"textSecondary\" gutterBottom>Recovered</Typography>\r\n                        <Typography variant=\"h5\">\r\n                            <CountUp start={0} end={recovered.value} duration={2} separator=\",\" />\r\n                        </Typography>\r\n                        <Typography color =\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\r\n                        <Typography variant=\"body2\">Number of recoveries from COVID-19</Typography>\r\n                    </CardContent>\r\n                </Grid>\r\n                <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.deaths)}>\r\n                    <CardContent>\r\n                        <Typography color=\"textSecondary\" gutterBottom>Deaths</Typography>\r\n                        <Typography variant=\"h5\">\r\n                            <CountUp start={0} end={deaths.value} duration={2} separator=\",\" />\r\n                        </Typography>\r\n                        <Typography color =\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\r\n                        <Typography variant=\"body2\">Number of deaths caused by COVID-19</Typography>\r\n                    </CardContent>\r\n                </Grid>\r\n            </Grid>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Cards;","import axios from 'axios';\r\n\r\nconst url = 'https://covid19.mathdro.id/api';\r\n\r\nexport const fetchData = async (country) => {\r\n    let changeableUrl = url;\r\n\r\n    if (country) {\r\n        changeableUrl = `${url}/countries/${country}`;\r\n    }\r\n\r\n\r\n    try {\r\n    const { data: { confirmed, recovered, deaths, lastUpdate } } = await axios.get(changeableUrl);\r\n\r\n    return { confirmed, recovered, deaths, lastUpdate }\r\n\r\n    } catch (error) { \r\n        console.log(error)\r\n    }\r\n}\r\n\r\nexport const fetchDailyData = async () => {\r\n    try {\r\n        const {data} = await axios.get(`${url}/daily`);\r\n\r\n        return data.map(({ confirmed, deaths, reportDate: date }) => ({ confirmed: confirmed.total, deaths: deaths.total, date }));\r\n    } catch (error) {\r\n        console.log(error)\r\n    }\r\n}\r\n\r\nexport const fetchCountries = async () => {\r\n    try {\r\n        const { data: { countries } } = await axios.get(`${url}/countries`);\r\n\r\n        return countries.map((country) => country.name);\r\n    } catch (error) {\r\n        return error;\r\n    }\r\n}","import React, {useState, useEffect} from 'react';\r\nimport { fetchDailyData } from '../../api';\r\nimport { Line, Bar } from 'react-chartjs-2';\r\n\r\nimport styles from './Chart.module.css';\r\n\r\n\r\nconst Chart = ({ data: {confirmed, recovered, deaths}, country }) => {\r\n\r\n    const [dailyData, setDailyData] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const fetchAPI = async () => {\r\n            setDailyData(await fetchDailyData());\r\n        }\r\n\r\n        fetchAPI();\r\n    }, []);\r\n\r\n    const lineChart = (\r\n        dailyData.length ? (\r\n        <Line\r\n            data = {{\r\n                labels: dailyData.map(({ date }) => date ),\r\n                datasets: [{\r\n                    data: dailyData.map(({ confirmed }) => confirmed ),\r\n                    label: 'Infected',\r\n                    borderColor: '#3333ff',\r\n                    fill: true,\r\n                }, {\r\n                    data: dailyData.map(({ deaths }) => deaths ),\r\n                    label: 'Deaths',\r\n                    borderColor: 'red',\r\n                    backgroundColor: 'rgba(255,0,0,0.5)',\r\n                    fill: true,\r\n                }],\r\n            }}\r\n        />\r\n        ) : null\r\n    );\r\n\r\n    const barChart = (\r\n        confirmed \r\n        ? (\r\n            <Bar \r\n                data={{\r\n                    labels: ['Infected', 'Recovered', 'Deaths'],\r\n                    datasets: [{\r\n                        label: 'People',\r\n                        backgroundColor: ['rgba(0,0,255,0.5)', 'rgba(0,255,0,0.5)', 'rgba(255,0,0,0.5)',],\r\n                        data: [confirmed.value, recovered.value, deaths.value]\r\n                    }]\r\n                }}\r\n                options={{\r\n                    legend: {display: false},\r\n                    title: {display: true, text:`Current stats in ${country}`},\r\n                }}\r\n            />\r\n        ) : null\r\n    )\r\n\r\n    return (\r\n        <div className={styles.container}>\r\n            {country ? barChart : lineChart}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Chart;","import React, {useState, useEffect} from 'react';\r\nimport { NativeSelect, FormControl} from '@material-ui/core';\r\n\r\nimport styles from './CountryPicker.module.css';\r\n\r\nimport { fetchCountries } from '../../api';\r\n\r\nconst CountryPicker = ({ handleCountryChange }) => {\r\n\r\n    const [countries, setCountries] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const fetchAPI = async () => {\r\n            setCountries(await fetchCountries());\r\n        }\r\n\r\n        fetchAPI();\r\n    }, [setCountries]);\r\n\r\n    return (\r\n        <div>\r\n            <FormControl className={styles.formControl}>\r\n                <NativeSelect defaultValue=\"\" onChange={(e) => handleCountryChange(e.target.value)}>\r\n                    <option value=\"\">Global</option>\r\n                    {countries.map((country, i) => <option key={i} value={country}>{country}</option>)}\r\n                </NativeSelect>\r\n            </FormControl>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CountryPicker;","import React from 'react';\r\n\r\nimport {Cards, Chart, CountryPicker} from './components';\r\nimport styles from './App.module.css';\r\nimport { fetchData } from './api';\r\nimport coronaImage from './images/image.png';\r\n\r\nclass App extends React.Component {\r\n\r\n    state = {\r\n        data: {},\r\n        country: '',\r\n    }\r\n\r\n    async componentDidMount() {\r\n        const fetchedData = await fetchData();\r\n\r\n        this.setState({data: fetchedData});\r\n    }\r\n\r\n    handleCountryChange = async (country) => {\r\n        const fetchedData = await fetchData(country);\r\n        \r\n        this.setState({data: fetchedData, country: country});\r\n    }\r\n\r\n    render() {\r\n\r\n        const {data, country} = this.state;\r\n        \r\n        return(\r\n        <div className={styles.container}>\r\n            <img className={styles.image} src={coronaImage} alt=\"COVID-19\"/>\r\n            <Cards data ={data} />\r\n            <CountryPicker handleCountryChange={this.handleCountryChange}/>\r\n            <Chart data={data} country={country}/>\r\n        </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__15TDj\",\"image\":\"App_image__2c4ZM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__p-7_V\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"CountryPicker_formControl__pqvMq\"};","module.exports = __webpack_public_path__ + \"static/media/image.d7265326.png\";"],"sourceRoot":""}